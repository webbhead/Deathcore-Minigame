package me.webbhead.deathcore.me.webbhead.deathcore.commands;

import me.webbhead.deathcore.MessageManager;
import me.webbhead.deathcore.SettingsManager;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.command.ConsoleCommandSender;
import org.bukkit.configuration.ConfigurationSection;
import org.bukkit.entity.Player;

/**
 * @Author webbhead.
 */
public class Setstart implements CommandExecutor {
    public boolean onCommand(CommandSender sender, Command cmd, String label, String[] args) {
        if (sender instanceof ConsoleCommandSender) {
            MessageManager.getInstance().msg(sender, MessageManager.MessageType.BAD, "Only players can use this command.");
            return true;
        }
        Player p = (Player) sender;
        if (cmd.getName().equalsIgnoreCase("setstart")) {
            if (!p.hasPermission("deathcore.setstart")) {
                MessageManager.getInstance().msg(p, MessageManager.MessageType.BAD + "No Permission!");
                return true;
            }
            if (args.length == 0) {
                MessageManager.getInstance().msg(p, MessageManager.MessageType.BAD, "You did not specify an arena ID.");
                return true;
            }

            int id = -1;

            try {
                id = Integer.parseInt(args[0]);
            } catch (Exception e) {
                MessageManager.getInstance().msg(p, MessageManager.MessageType.BAD, args[0] + " is not a valid number!");
                return true;
            }

            if (SettingsManager.getInstance().<ConfigurationSection>get(id + "") == null) {
                MessageManager.getInstance().msg(p, MessageManager.MessageType.BAD, "There is no arena with ID " + id + "!");
                return true;
            }

            ConfigurationSection s = SettingsManager.getInstance().createConfigurationSection(id + ".start");

            s.set("world", p.getWorld().getName());
            s.set("x", p.getLocation().getX());
            s.set("y", p.getLocation().getY());
            s.set("z", p.getLocation().getZ());

            SettingsManager.getInstance().set(id + ".start", s);

            MessageManager.getInstance().msg(p, MessageManager.MessageType.GOOD, "Set start for arena " + id + "!");
        }
        return true;
    }
}
